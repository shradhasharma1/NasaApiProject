{"ast":null,"code":"var _jsxFileName = \"/Users/aman_sharma/IdeaProjects/Nasa-Api/nasa-api-frontend/src/components/Apod.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Apod = () => {\n  _s();\n  const [apodData, setApodData] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchApodData = async () => {\n    setLoading(true);\n    setError(null);\n    const formattedDate = selectedDate.toISOString().split('T')[0]; // Format date as YYYY-MM-DD\n\n    try {\n      // Log the request being sent to the backend\n      console.log(`Sending request to backend for date: ${formattedDate}`);\n      const response = await axios.get(`http://localhost:5002/apod?date=${formattedDate}`);\n      console.log('Backend response:', response.data); // Log the backend response\n      setApodData(response.data); // Set the returned APOD data\n    } catch (error) {\n      console.error('Error fetching APOD data from backend:', error);\n      setError('Error fetching APOD data.');\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    fetchApodData(); // Fetch APOD data whenever the selectedDate changes\n  }, [selectedDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Astronomy Picture of the Day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: selectedDate,\n      onChange: date => setSelectedDate(date),\n      dateFormat: \"yyyy-MM-dd\",\n      maxDate: new Date() // Disable future dates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), apodData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: apodData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: apodData.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), apodData.media_type === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: apodData.url,\n        alt: apodData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"iframe\", {\n        title: \"APOD Video\",\n        src: apodData.url,\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: apodData.explanation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Apod, \"sNDABRX97t6/EGkNA9jsrtH5A7A=\");\n_c = Apod;\nexport default Apod;\nvar _c;\n$RefreshReg$(_c, \"Apod\");","map":{"version":3,"names":["React","useEffect","useState","axios","DatePicker","jsxDEV","_jsxDEV","Apod","_s","apodData","setApodData","selectedDate","setSelectedDate","Date","loading","setLoading","error","setError","fetchApodData","formattedDate","toISOString","split","console","log","response","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","date","dateFormat","maxDate","title","media_type","src","url","alt","allowFullScreen","explanation","_c","$RefreshReg$"],"sources":["/Users/aman_sharma/IdeaProjects/Nasa-Api/nasa-api-frontend/src/components/Apod.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst Apod = () => {\n  const [apodData, setApodData] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchApodData = async () => {\n    setLoading(true);\n    setError(null);\n    const formattedDate = selectedDate.toISOString().split('T')[0];  // Format date as YYYY-MM-DD\n\n    try {\n      // Log the request being sent to the backend\n      console.log(`Sending request to backend for date: ${formattedDate}`);\n\n      const response = await axios.get(`http://localhost:5002/apod?date=${formattedDate}`);\n      console.log('Backend response:', response.data);  // Log the backend response\n      setApodData(response.data);  // Set the returned APOD data\n    } catch (error) {\n      console.error('Error fetching APOD data from backend:', error);\n      setError('Error fetching APOD data.');\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchApodData();  // Fetch APOD data whenever the selectedDate changes\n  }, [selectedDate]);\n\n  return (\n    <div>\n      <h1>Astronomy Picture of the Day</h1>\n      <DatePicker\n        selected={selectedDate}\n        onChange={(date) => setSelectedDate(date)}\n        dateFormat=\"yyyy-MM-dd\"\n        maxDate={new Date()}  // Disable future dates\n      />\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      {apodData && (\n        <div>\n          <h2>{apodData.title}</h2>\n          <p>{apodData.date}</p>\n          {apodData.media_type === 'image' ? (\n            <img src={apodData.url} alt={apodData.title} />\n          ) : (\n            <iframe\n              title=\"APOD Video\"\n              src={apodData.url}\n              allowFullScreen\n            ></iframe>\n          )}\n          <p>{apodData.explanation}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Apod;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}