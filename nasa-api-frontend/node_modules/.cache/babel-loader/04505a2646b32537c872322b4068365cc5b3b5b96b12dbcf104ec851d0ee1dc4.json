{"ast":null,"code":"var _jsxFileName = \"/Users/aman_sharma/IdeaProjects/Nasa-Api/nasa-api-frontend/src/components/Apod.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './Apod.css';\nimport { ClipLoader } from 'react-spinners'; // Loading spinner\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Apod = () => {\n  _s();\n  const [apodData, setApodData] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch APOD data when date changes\n  useEffect(() => {\n    const fetchApodData = async () => {\n      setLoading(true);\n      setError(null);\n      const formattedDate = selectedDate.toISOString().split('T')[0];\n      try {\n        const response = await axios.get(`http://localhost:5002/apod?date=${formattedDate}`);\n        setApodData(response.data);\n      } catch (err) {\n        setError('Error fetching APOD data');\n      }\n      setLoading(false);\n    };\n    fetchApodData();\n  }, [selectedDate]);\n\n  // Loading state\n  if (loading) return /*#__PURE__*/_jsxDEV(ClipLoader, {\n    size: 50,\n    color: \"#123abc\",\n    loading: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n\n  // Error state\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 21\n  }, this);\n\n  // Conditional rendering to ensure apodData is loaded before rendering the content\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"apod-container\",\n    children: apodData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"apod-title\",\n        children: apodData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"apod-date\",\n        children: apodData.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: selectedDate,\n        onChange: date => setSelectedDate(date),\n        dateFormat: \"yyyy-MM-dd\",\n        className: \"date-picker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), apodData.media_type === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: apodData.url,\n        alt: apodData.title,\n        className: \"apod-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"iframe\", {\n        title: \"APOD Video\",\n        className: \"apod-video\",\n        src: apodData.url,\n        allow: \"autoplay; encrypted-media\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"apod-explanation\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: apodData.explanation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), apodData.copyright && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"apod-copyright\",\n        children: [\"\\xA9 \", apodData.copyright]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Apod, \"sNDABRX97t6/EGkNA9jsrtH5A7A=\");\n_c = Apod;\nexport default Apod;\nvar _c;\n$RefreshReg$(_c, \"Apod\");","map":{"version":3,"names":["React","useEffect","useState","axios","DatePicker","ClipLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","Apod","_s","apodData","setApodData","selectedDate","setSelectedDate","Date","loading","setLoading","error","setError","fetchApodData","formattedDate","toISOString","split","response","get","data","err","size","color","fileName","_jsxFileName","lineNumber","columnNumber","className","children","title","date","selected","onChange","dateFormat","media_type","src","url","alt","allow","allowFullScreen","explanation","copyright","_c","$RefreshReg$"],"sources":["/Users/aman_sharma/IdeaProjects/Nasa-Api/nasa-api-frontend/src/components/Apod.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './Apod.css';\nimport { ClipLoader } from 'react-spinners';  // Loading spinner\n\nconst Apod = () => {\n  const [apodData, setApodData] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch APOD data when date changes\n  useEffect(() => {\n    const fetchApodData = async () => {\n      setLoading(true);\n      setError(null);\n      const formattedDate = selectedDate.toISOString().split('T')[0];\n      try {\n        const response = await axios.get(`http://localhost:5002/apod?date=${formattedDate}`);\n        setApodData(response.data);\n      } catch (err) {\n        setError('Error fetching APOD data');\n      }\n      setLoading(false);\n    };\n\n    fetchApodData();\n  }, [selectedDate]);\n\n  // Loading state\n  if (loading) return <ClipLoader size={50} color=\"#123abc\" loading={true} />;\n\n  // Error state\n  if (error) return <div className=\"error-message\">{error}</div>;\n\n  // Conditional rendering to ensure apodData is loaded before rendering the content\n  return (\n    <div className=\"apod-container\">\n      {apodData ? (\n        <>\n          <h1 className=\"apod-title\">{apodData.title}</h1>\n          <p className=\"apod-date\">{apodData.date}</p>\n\n          {/* Date Picker to select the APOD date */}\n          <DatePicker\n            selected={selectedDate}\n            onChange={(date) => setSelectedDate(date)}\n            dateFormat=\"yyyy-MM-dd\"\n            className=\"date-picker\"\n          />\n\n          {/* Media (image or video) */}\n          {apodData.media_type === 'image' ? (\n            <img src={apodData.url} alt={apodData.title} className=\"apod-image\" />\n          ) : (\n            <iframe\n              title=\"APOD Video\"\n              className=\"apod-video\"\n              src={apodData.url}\n              allow=\"autoplay; encrypted-media\"\n              allowFullScreen\n            />\n          )}\n\n          {/* Explanation */}\n          <div className=\"apod-explanation\">\n            <p>{apodData.explanation}</p>\n          </div>\n\n          {/* Copyright */}\n          {apodData.copyright && <p className=\"apod-copyright\">Â© {apodData.copyright}</p>}\n        </>\n      ) : (\n        <p>Loading data...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Apod;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}