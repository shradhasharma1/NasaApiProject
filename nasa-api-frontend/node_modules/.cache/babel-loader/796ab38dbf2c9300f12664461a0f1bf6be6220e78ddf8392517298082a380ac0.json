{"ast":null,"code":"var _jsxFileName = \"/Users/aman_sharma/IdeaProjects/Nasa-Api/nasa-api-frontend/src/components/Apod.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './Apod.css';\nimport { ClipLoader } from 'react-spinners'; // Loading spinner\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Apod = () => {\n  _s();\n  const [apodData, setApodData] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch APOD data when date changes\n  useEffect(() => {\n    const fetchApodData = async () => {\n      setLoading(true);\n      setError(null);\n      const formattedDate = selectedDate.toISOString().split('T')[0];\n      try {\n        const response = await axios.get(`http://localhost:5002/apod?date=${formattedDate}`);\n        setApodData(response.data);\n      } catch (err) {\n        setError('Error fetching APOD data');\n      }\n      setLoading(false);\n    };\n    fetchApodData();\n  }, [selectedDate]);\n\n  // Loading state\n  if (loading) return /*#__PURE__*/_jsxDEV(ClipLoader, {\n    size: 50,\n    color: \"#123abc\",\n    loading: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n\n  // Error state\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"apod-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"apod-title\",\n      children: apodData === null || apodData === void 0 ? void 0 : apodData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"apod-date\",\n      children: apodData === null || apodData === void 0 ? void 0 : apodData.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: selectedDate,\n      onChange: date => setSelectedDate(date),\n      dateFormat: \"yyyy-MM-dd\",\n      className: \"date-picker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), (apodData === null || apodData === void 0 ? void 0 : apodData.media_type) === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: apodData.url,\n      alt: apodData.title,\n      className: \"apod-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: \"APOD Video\",\n      className: \"apod-video\",\n      src: apodData.url,\n      allow: \"autoplay; encrypted-media\",\n      allowFullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"apod-explanation\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: apodData === null || apodData === void 0 ? void 0 : apodData.explanation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), (apodData === null || apodData === void 0 ? void 0 : apodData.copyright) && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"apod-copyright\",\n      children: [\"\\xA9 \", apodData.copyright]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Apod, \"sNDABRX97t6/EGkNA9jsrtH5A7A=\");\n_c = Apod;\nexport default Apod;\nvar _c;\n$RefreshReg$(_c, \"Apod\");","map":{"version":3,"names":["React","useEffect","useState","axios","DatePicker","ClipLoader","jsxDEV","_jsxDEV","Apod","_s","apodData","setApodData","selectedDate","setSelectedDate","Date","loading","setLoading","error","setError","fetchApodData","formattedDate","toISOString","split","response","get","data","err","size","color","fileName","_jsxFileName","lineNumber","columnNumber","className","children","title","date","selected","onChange","dateFormat","media_type","src","url","alt","allow","allowFullScreen","explanation","copyright","_c","$RefreshReg$"],"sources":["/Users/aman_sharma/IdeaProjects/Nasa-Api/nasa-api-frontend/src/components/Apod.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './Apod.css';\nimport { ClipLoader } from 'react-spinners';  // Loading spinner\n\nconst Apod = () => {\n  const [apodData, setApodData] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch APOD data when date changes\n  useEffect(() => {\n    const fetchApodData = async () => {\n      setLoading(true);\n      setError(null);\n      const formattedDate = selectedDate.toISOString().split('T')[0];\n      try {\n        const response = await axios.get(`http://localhost:5002/apod?date=${formattedDate}`);\n        setApodData(response.data);\n      } catch (err) {\n        setError('Error fetching APOD data');\n      }\n      setLoading(false);\n    };\n\n    fetchApodData();\n  }, [selectedDate]);\n\n  // Loading state\n  if (loading) return <ClipLoader size={50} color=\"#123abc\" loading={true} />;\n\n  // Error state\n  if (error) return <div className=\"error-message\">{error}</div>;\n\n  return (\n    <div className=\"apod-container\">\n      <h1 className=\"apod-title\">{apodData?.title}</h1>\n      <p className=\"apod-date\">{apodData?.date}</p>\n\n      {/* Date Picker to select the APOD date */}\n      <DatePicker\n        selected={selectedDate}\n        onChange={(date) => setSelectedDate(date)}\n        dateFormat=\"yyyy-MM-dd\"\n        className=\"date-picker\"\n      />\n\n      {/* Media (image or video) */}\n      {apodData?.media_type === 'image' ? (\n        <img src={apodData.url} alt={apodData.title} className=\"apod-image\" />\n      ) : (\n        <iframe\n          title=\"APOD Video\"\n          className=\"apod-video\"\n          src={apodData.url}\n          allow=\"autoplay; encrypted-media\"\n          allowFullScreen\n        />\n      )}\n\n      {/* Explanation */}\n      <div className=\"apod-explanation\">\n        <p>{apodData?.explanation}</p>\n      </div>\n\n      {/* Copyright */}\n      {apodData?.copyright && <p className=\"apod-copyright\">Â© {apodData.copyright}</p>}\n    </div>\n  );\n};\n\nexport default Apod;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}