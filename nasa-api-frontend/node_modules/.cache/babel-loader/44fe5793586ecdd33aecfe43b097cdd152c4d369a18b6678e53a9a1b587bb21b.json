{"ast":null,"code":"var _jsxFileName = \"/Users/aman_sharma/IdeaProjects/Nasa-Api/nasa-api-frontend/src/components/Apod.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Apod = () => {\n  _s();\n  const [apodData, setApodData] = useState(null);\n  const [date, setDate] = useState(new Date().toISOString().split('T')[0]); // Default to today\n\n  const fetchApodData = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5003/apod?date=${date}`);\n      setApodData(response.data);\n    } catch (error) {\n      console.error('Error fetching APOD data from backend:', error.message);\n      alert('Error fetching APOD data. Please try again later.');\n    }\n  };\n  useEffect(() => {\n    fetchApodData();\n  }, [date]); // Fetch data whenever the date changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Astronomy Picture of the Day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: date,\n      onChange: e => setDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchApodData,\n      children: \"Fetch for Selected Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), apodData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: apodData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: apodData.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: apodData.url,\n        alt: apodData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: apodData.explanation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Apod, \"k2DuWfH525SNcDIeaNFQvkQQXHQ=\");\n_c = Apod;\nexport default Apod;\nvar _c;\n$RefreshReg$(_c, \"Apod\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Apod","_s","apodData","setApodData","date","setDate","Date","toISOString","split","fetchApodData","response","get","data","error","console","message","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","title","src","url","alt","explanation","_c","$RefreshReg$"],"sources":["/Users/aman_sharma/IdeaProjects/Nasa-Api/nasa-api-frontend/src/components/Apod.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Apod = () => {\n    const [apodData, setApodData] = useState(null);\n    const [date, setDate] = useState(new Date().toISOString().split('T')[0]); // Default to today\n\n    const fetchApodData = async () => {\n        try {\n            const response = await axios.get(`http://localhost:5003/apod?date=${date}`);\n            setApodData(response.data);\n        } catch (error) {\n            console.error('Error fetching APOD data from backend:', error.message);\n            alert('Error fetching APOD data. Please try again later.');\n        }\n    };\n\n    useEffect(() => {\n        fetchApodData();\n    }, [date]); // Fetch data whenever the date changes\n\n    return (\n        <div>\n            <h1>Astronomy Picture of the Day</h1>\n            <input\n                type=\"date\"\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n            />\n            <button onClick={fetchApodData}>Fetch for Selected Date</button>\n\n            {apodData && (\n                <div>\n                    <h2>{apodData.title}</h2>\n                    <p>{apodData.date}</p>\n                    <img src={apodData.url} alt={apodData.title} />\n                    <p>{apodData.explanation}</p>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Apod;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAIU,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE1E,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,mCAAmCP,IAAI,EAAE,CAAC;MAC3ED,WAAW,CAACO,QAAQ,CAACE,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAACE,OAAO,CAAC;MACtEC,KAAK,CAAC,mDAAmD,CAAC;IAC9D;EACJ,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACZc,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC,CAAC,CAAC;;EAEZ,oBACIL,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCtB,OAAA;MACIuB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEnB,IAAK;MACZoB,QAAQ,EAAGC,CAAC,IAAKpB,OAAO,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFtB,OAAA;MAAQ4B,OAAO,EAAElB,aAAc;MAAAQ,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE/DnB,QAAQ,iBACLH,OAAA;MAAAkB,QAAA,gBACIlB,OAAA;QAAAkB,QAAA,EAAKf,QAAQ,CAAC0B;MAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzBtB,OAAA;QAAAkB,QAAA,EAAIf,QAAQ,CAACE;MAAI;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBtB,OAAA;QAAK8B,GAAG,EAAE3B,QAAQ,CAAC4B,GAAI;QAACC,GAAG,EAAE7B,QAAQ,CAAC0B;MAAM;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/CtB,OAAA;QAAAkB,QAAA,EAAIf,QAAQ,CAAC8B;MAAW;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACpB,EAAA,CAtCID,IAAI;AAAAiC,EAAA,GAAJjC,IAAI;AAwCV,eAAeA,IAAI;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}