{"ast":null,"code":"var _jsxFileName = \"/Users/aman_sharma/IdeaProjects/Nasa-Api/nasa-api-frontend/src/components/MarsRoverPhotos.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button, TextField, Typography, Container, Grid, Snackbar } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarsRoverPhotos = () => {\n  _s();\n  const [sol, setSol] = useState(1000);\n  const [photos, setPhotos] = useState([]);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const fetchMarsPhotos = async () => {\n    setError('');\n    setSuccessMessage('');\n    if (sol <= 0) {\n      setError('Sol must be a positive integer.');\n      return;\n    }\n    try {\n      const response = await axios.get(`http://localhost:5004/mars-photos?sol=${sol}`);\n      const fetchedPhotos = response.data.photos;\n      if (fetchedPhotos.length === 0) {\n        setError(`No photos available for Sol ${sol}.`);\n        setPhotos([]);\n      } else {\n        setPhotos(fetchedPhotos);\n        setSuccessMessage(`Fetched ${fetchedPhotos.length} photos for Sol ${sol}.`);\n      }\n    } catch (err) {\n      setError('Error fetching Mars photos: ' + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      textAlign: 'center',\n      padding: '40px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      gutterBottom: true,\n      children: \"Mars Rover Photos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"number\",\n      value: sol,\n      onChange: e => setSol(e.target.value),\n      label: \"Sol\",\n      sx: {\n        marginRight: '10px',\n        width: '200px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: fetchMarsPhotos,\n      children: \"Fetch Mars Photos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: Boolean(error),\n      message: error,\n      autoHideDuration: 6000,\n      onClose: () => setError('')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: Boolean(successMessage),\n      message: successMessage,\n      autoHideDuration: 6000,\n      onClose: () => setSuccessMessage('')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      style: {\n        marginTop: '20px'\n      },\n      children: photos.map(photo => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: photo.img_src,\n          alt: `Mars Rover ${photo.id}`,\n          style: {\n            width: '100%',\n            borderRadius: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)\n      }, photo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(MarsRoverPhotos, \"2u6YGPlj8ssF8xond9nkFdNi234=\");\n_c = MarsRoverPhotos;\nexport default MarsRoverPhotos;\nvar _c;\n$RefreshReg$(_c, \"MarsRoverPhotos\");","map":{"version":3,"names":["React","useState","axios","Button","TextField","Typography","Container","Grid","Snackbar","jsxDEV","_jsxDEV","MarsRoverPhotos","_s","sol","setSol","photos","setPhotos","error","setError","successMessage","setSuccessMessage","fetchMarsPhotos","response","get","fetchedPhotos","data","length","err","message","sx","textAlign","padding","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","label","marginRight","width","color","onClick","open","Boolean","autoHideDuration","onClose","container","spacing","style","marginTop","map","photo","item","xs","sm","md","src","img_src","alt","id","borderRadius","_c","$RefreshReg$"],"sources":["/Users/aman_sharma/IdeaProjects/Nasa-Api/nasa-api-frontend/src/components/MarsRoverPhotos.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button, TextField, Typography, Container, Grid, Snackbar } from '@mui/material';\n\nconst MarsRoverPhotos = () => {\n    const [sol, setSol] = useState(1000);\n    const [photos, setPhotos] = useState([]);\n    const [error, setError] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n\n    const fetchMarsPhotos = async () => {\n        setError('');\n        setSuccessMessage('');\n\n        if (sol <= 0) {\n            setError('Sol must be a positive integer.');\n            return;\n        }\n\n        try {\n            const response = await axios.get(`http://localhost:5004/mars-photos?sol=${sol}`);\n            const fetchedPhotos = response.data.photos;\n\n            if (fetchedPhotos.length === 0) {\n                setError(`No photos available for Sol ${sol}.`);\n                setPhotos([]);\n            } else {\n                setPhotos(fetchedPhotos);\n                setSuccessMessage(`Fetched ${fetchedPhotos.length} photos for Sol ${sol}.`);\n            }\n        } catch (err) {\n            setError('Error fetching Mars photos: ' + err.message);\n        }\n    };\n\n    return (\n        <Container sx={{ textAlign: 'center', padding: '40px' }}>\n            <Typography variant=\"h3\" gutterBottom>Mars Rover Photos</Typography>\n            <TextField\n                type=\"number\"\n                value={sol}\n                onChange={(e) => setSol(e.target.value)}\n                label=\"Sol\"\n                sx={{ marginRight: '10px', width: '200px' }}\n            />\n            <Button variant=\"contained\" color=\"primary\" onClick={fetchMarsPhotos}>\n                Fetch Mars Photos\n            </Button>\n\n            {error && <Snackbar open={Boolean(error)} message={error} autoHideDuration={6000} onClose={() => setError('')} />}\n            {successMessage && <Snackbar open={Boolean(successMessage)} message={successMessage} autoHideDuration={6000} onClose={() => setSuccessMessage('')} />}\n\n            <Grid container spacing={2} style={{ marginTop: '20px' }}>\n                {photos.map((photo) => (\n                    <Grid item xs={12} sm={6} md={4} key={photo.id}>\n                        <img src={photo.img_src} alt={`Mars Rover ${photo.id}`} style={{ width: '100%', borderRadius: '8px' }} />\n                    </Grid>\n                ))}\n            </Grid>\n        </Container>\n    );\n};\n\nexport default MarsRoverPhotos;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}