{"ast":null,"code":"var _jsxFileName = \"/Users/aman_sharma/IdeaProjects/Nasa-Api/nasa-api-frontend/src/components/Apod.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Apod = () => {\n  _s();\n  const [apodData, setApodData] = useState(null);\n  useEffect(() => {\n    // Fetch APOD data from the backend\n    axios.get('http://localhost:5000/apod').then(response => setApodData(response.data)).catch(error => console.error('Error fetching APOD:', error));\n  }, []);\n  if (!apodData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: apodData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: apodData.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), apodData.media_type === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: apodData.url,\n      alt: apodData.title,\n      style: {\n        maxWidth: '100%',\n        height: 'auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: \"APOD Video\",\n      width: \"560\",\n      height: \"315\",\n      src: apodData.url,\n      allow: \"autoplay; encrypted-media\",\n      allowFullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: apodData.explanation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), apodData.copyright && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\xA9 \", apodData.copyright]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Apod, \"bvIZ7Emgu0ZmRiX8GAe5i8fzK6c=\");\n_c = Apod;\nexport default Apod;\nvar _c;\n$RefreshReg$(_c, \"Apod\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Apod","_s","apodData","setApodData","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","title","date","media_type","src","url","alt","maxWidth","height","width","allow","allowFullScreen","explanation","copyright","_c","$RefreshReg$"],"sources":["/Users/aman_sharma/IdeaProjects/Nasa-Api/nasa-api-frontend/src/components/Apod.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Apod = () => {\n  const [apodData, setApodData] = useState(null);\n\n  useEffect(() => {\n    // Fetch APOD data from the backend\n    axios.get('http://localhost:5000/apod')\n      .then(response => setApodData(response.data))\n      .catch(error => console.error('Error fetching APOD:', error));\n  }, []);\n\n  if (!apodData) return <div>Loading...</div>;\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h1>{apodData.title}</h1>\n      <p>{apodData.date}</p>\n      {apodData.media_type === 'image' ? (\n        <img src={apodData.url} alt={apodData.title} style={{ maxWidth: '100%', height: 'auto' }} />\n      ) : (\n        <iframe\n          title=\"APOD Video\"\n          width=\"560\"\n          height=\"315\"\n          src={apodData.url}\n          allow=\"autoplay; encrypted-media\"\n          allowFullScreen\n        />\n      )}\n      <p>{apodData.explanation}</p>\n      {apodData.copyright && <p>Â© {apodData.copyright}</p>}\n    </div>\n  );\n};\n\nexport default Apod;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CAACO,GAAG,CAAC,4BAA4B,CAAC,CACpCC,IAAI,CAACC,QAAQ,IAAIH,WAAW,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC5CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACP,QAAQ,EAAE,oBAAOH,OAAA;IAAAY,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE3C,oBACEhB,OAAA;IAAKiB,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAN,QAAA,gBAClCZ,OAAA;MAAAY,QAAA,EAAKT,QAAQ,CAACgB;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBhB,OAAA;MAAAY,QAAA,EAAIT,QAAQ,CAACiB;IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBb,QAAQ,CAACkB,UAAU,KAAK,OAAO,gBAC9BrB,OAAA;MAAKsB,GAAG,EAAEnB,QAAQ,CAACoB,GAAI;MAACC,GAAG,EAAErB,QAAQ,CAACgB,KAAM;MAACF,KAAK,EAAE;QAAEQ,QAAQ,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAO;IAAE;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE5FhB,OAAA;MACEmB,KAAK,EAAC,YAAY;MAClBQ,KAAK,EAAC,KAAK;MACXD,MAAM,EAAC,KAAK;MACZJ,GAAG,EAAEnB,QAAQ,CAACoB,GAAI;MAClBK,KAAK,EAAC,2BAA2B;MACjCC,eAAe;IAAA;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CACF,eACDhB,OAAA;MAAAY,QAAA,EAAIT,QAAQ,CAAC2B;IAAW;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC5Bb,QAAQ,CAAC4B,SAAS,iBAAI/B,OAAA;MAAAY,QAAA,GAAG,OAAE,EAACT,QAAQ,CAAC4B,SAAS;IAAA;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV,CAAC;AAACd,EAAA,CAhCID,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAkCV,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}