{"ast":null,"code":"var _jsxFileName = \"/Users/aman_sharma/IdeaProjects/Nasa-Api/nasa-api-frontend/src/components/MarsRoverPhotos.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/MarsRover.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Container, Typography, Card, CardMedia, CardContent, Button, Grid, CircularProgress, Snackbar } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarsRover = () => {\n  _s();\n  const [photos, setPhotos] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fetchMarsRoverPhotos = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get('http://localhost:5004/mars-rover-photos'); // Adjust your backend endpoint\n      setPhotos(response.data.photos);\n    } catch (err) {\n      setError('Error fetching Mars Rover photos.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchMarsRoverPhotos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      textAlign: 'center',\n      padding: '40px',\n      background: 'url(/path/to/space-background.jpg)',\n      backgroundSize: 'cover'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      gutterBottom: true,\n      children: \"Mars Rover Photos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: Boolean(error),\n      autoHideDuration: 6000,\n      message: error,\n      onClose: () => setError('')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: photos.map(photo => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            height: \"300\",\n            image: photo.img_src,\n            alt: `Mars Rover photo taken on ${photo.earth_date}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Taken on: \", photo.earth_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, photo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(MarsRover, \"oJsIOeZ75OM+gjgtY5U7EtyOXFw=\");\n_c = MarsRover;\nexport default MarsRover;\nvar _c;\n$RefreshReg$(_c, \"MarsRover\");","map":{"version":3,"names":["React","useEffect","useState","axios","Container","Typography","Card","CardMedia","CardContent","Button","Grid","CircularProgress","Snackbar","jsxDEV","_jsxDEV","MarsRover","_s","photos","setPhotos","error","setError","loading","setLoading","fetchMarsRoverPhotos","response","get","data","err","sx","textAlign","padding","background","backgroundSize","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","open","Boolean","autoHideDuration","message","onClose","container","spacing","map","photo","item","xs","sm","md","component","height","image","img_src","alt","earth_date","id","_c","$RefreshReg$"],"sources":["/Users/aman_sharma/IdeaProjects/Nasa-Api/nasa-api-frontend/src/components/MarsRoverPhotos.js"],"sourcesContent":["// frontend/src/components/MarsRover.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {\n    Container,\n    Typography,\n    Card,\n    CardMedia,\n    CardContent,\n    Button,\n    Grid,\n    CircularProgress,\n    Snackbar,\n} from '@mui/material';\n\nconst MarsRover = () => {\n    const [photos, setPhotos] = useState([]);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const fetchMarsRoverPhotos = async () => {\n        setLoading(true);\n        try {\n            const response = await axios.get('http://localhost:5004/mars-rover-photos'); // Adjust your backend endpoint\n            setPhotos(response.data.photos);\n        } catch (err) {\n            setError('Error fetching Mars Rover photos.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchMarsRoverPhotos();\n    }, []);\n\n    return (\n        <Container sx={{ textAlign: 'center', padding: '40px', background: 'url(/path/to/space-background.jpg)', backgroundSize: 'cover' }}>\n            <Typography variant=\"h3\" gutterBottom>Mars Rover Photos</Typography>\n            {loading && <CircularProgress />}\n            {error && (\n                <Snackbar\n                    open={Boolean(error)}\n                    autoHideDuration={6000}\n                    message={error}\n                    onClose={() => setError('')}\n                />\n            )}\n            <Grid container spacing={2}>\n                {photos.map(photo => (\n                    <Grid item xs={12} sm={6} md={4} key={photo.id}>\n                        <Card>\n                            <CardMedia\n                                component=\"img\"\n                                height=\"300\"\n                                image={photo.img_src}\n                                alt={`Mars Rover photo taken on ${photo.earth_date}`}\n                            />\n                            <CardContent>\n                                <Typography variant=\"body2\">Taken on: {photo.earth_date}</Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n        </Container>\n    );\n};\n\nexport default MarsRover;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}