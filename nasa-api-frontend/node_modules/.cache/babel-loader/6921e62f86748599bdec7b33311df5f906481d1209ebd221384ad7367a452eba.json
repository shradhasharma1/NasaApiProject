{"ast":null,"code":"var _jsxFileName = \"/Users/aman_sharma/IdeaProjects/Nasa-Api/nasa-api-frontend/src/components/Apod.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './Apod.css';\nimport { ClipLoader } from 'react-spinners';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Apod = () => {\n  _s();\n  const [apodData, setApodData] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchApodData = async (queryType = 'date') => {\n    setLoading(true);\n    setError(null);\n    try {\n      let apiUrl = 'http://localhost:5002/apod';\n      if (queryType === 'date') {\n        const formattedDate = selectedDate.toISOString().split('T')[0]; // Format date as YYYY-MM-DD\n        apiUrl += `?date=${formattedDate}`;\n        console.log('Sending request to backend for date:', formattedDate); // Log the selected date\n      }\n      const response = await axios.get(apiUrl);\n      setApodData(response.data);\n    } catch (err) {\n      setError('Error fetching APOD data');\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    fetchApodData('date'); // Fetch APOD for the selected date initially\n  }, [selectedDate]);\n\n  // Loading state\n  if (loading) return /*#__PURE__*/_jsxDEV(ClipLoader, {\n    size: 50,\n    color: \"#123abc\",\n    loading: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 23\n  }, this);\n\n  // Error state\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"apod-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Astronomy Picture of the Day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: selectedDate,\n      onChange: date => setSelectedDate(date),\n      dateFormat: \"yyyy-MM-dd\",\n      className: \"date-picker\",\n      maxDate: new Date() // Disable future dates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchApodData('date'),\n      children: \"Fetch for Selected Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), apodData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: apodData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: apodData.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), apodData.media_type === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: apodData.url,\n        alt: apodData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"iframe\", {\n        title: apodData.title,\n        src: apodData.url,\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: apodData.explanation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Apod, \"sNDABRX97t6/EGkNA9jsrtH5A7A=\");\n_c = Apod;\nexport default Apod;\nvar _c;\n$RefreshReg$(_c, \"Apod\");","map":{"version":3,"names":["React","useEffect","useState","axios","DatePicker","ClipLoader","jsxDEV","_jsxDEV","Apod","_s","apodData","setApodData","selectedDate","setSelectedDate","Date","loading","setLoading","error","setError","fetchApodData","queryType","apiUrl","formattedDate","toISOString","split","console","log","response","get","data","err","size","color","fileName","_jsxFileName","lineNumber","columnNumber","className","children","selected","onChange","date","dateFormat","maxDate","onClick","title","media_type","src","url","alt","allowFullScreen","explanation","_c","$RefreshReg$"],"sources":["/Users/aman_sharma/IdeaProjects/Nasa-Api/nasa-api-frontend/src/components/Apod.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './Apod.css';\nimport { ClipLoader } from 'react-spinners';\n\nconst Apod = () => {\n  const [apodData, setApodData] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchApodData = async (queryType = 'date') => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      let apiUrl = 'http://localhost:5002/apod';\n\n      if (queryType === 'date') {\n        const formattedDate = selectedDate.toISOString().split('T')[0]; // Format date as YYYY-MM-DD\n        apiUrl += `?date=${formattedDate}`;\n        console.log('Sending request to backend for date:', formattedDate);  // Log the selected date\n      }\n\n      const response = await axios.get(apiUrl);\n      setApodData(response.data);\n    } catch (err) {\n      setError('Error fetching APOD data');\n    }\n\n    setLoading(false);\n  };\n\n\n  useEffect(() => {\n    fetchApodData('date');  // Fetch APOD for the selected date initially\n  }, [selectedDate]);\n\n  // Loading state\n  if (loading) return <ClipLoader size={50} color=\"#123abc\" loading={true} />;\n\n  // Error state\n  if (error) return <div className=\"error-message\">{error}</div>;\n\n  return (\n    <div className=\"apod-container\">\n      <h1>Astronomy Picture of the Day</h1>\n\n      {/* Date Picker to select the APOD date */}\n      <DatePicker\n        selected={selectedDate}\n        onChange={(date) => setSelectedDate(date)}\n        dateFormat=\"yyyy-MM-dd\"\n        className=\"date-picker\"\n        maxDate={new Date()}  // Disable future dates\n      />\n\n      <button onClick={() => fetchApodData('date')}>Fetch for Selected Date</button>\n\n      {/* Display APOD data */}\n      {apodData && (\n        <div>\n          <h3>{apodData.title}</h3>\n          <p>{apodData.date}</p>\n          {apodData.media_type === 'image' ? (\n            <img src={apodData.url} alt={apodData.title} />\n          ) : (\n            <iframe\n              title={apodData.title}\n              src={apodData.url}\n              allowFullScreen\n            ></iframe>\n          )}\n          <p>{apodData.explanation}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Apod;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}