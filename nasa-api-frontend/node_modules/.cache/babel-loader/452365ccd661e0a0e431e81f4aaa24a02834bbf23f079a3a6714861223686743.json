{"ast":null,"code":"var _jsxFileName = \"/Users/aman_sharma/IdeaProjects/Nasa-Api/nasa-api-frontend/src/components/MarsRoverPhotos.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button, TextField, Container, Typography, Card, CardMedia, CardContent, Snackbar } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarsRoverPhotos = () => {\n  _s();\n  const [sol, setSol] = useState(1000);\n  const [photos, setPhotos] = useState([]);\n  const [error, setError] = useState('');\n  const fetchMarsPhotos = async () => {\n    if (sol <= 0) {\n      setError('Sol must be a positive integer.');\n      return;\n    }\n    try {\n      const response = await axios.get(`http://localhost:5004/mars-photos?sol=${sol}`);\n      setPhotos(response.data.photos);\n      setError('');\n    } catch (err) {\n      setError('Error fetching Mars photos.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      textAlign: 'center',\n      padding: '40px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      gutterBottom: true,\n      children: \"Mars Rover Photos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Sol\",\n      type: \"number\",\n      value: sol,\n      onChange: e => setSol(e.target.value),\n      sx: {\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: fetchMarsPhotos,\n      children: \"Fetch Mars Photos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: Boolean(error),\n      autoHideDuration: 6000,\n      message: error,\n      onClose: () => setError('')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: photos.map(photo => /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: \"400\",\n          image: photo.img_src,\n          alt: `Mars photo taken by ${photo.rover.name} on sol ${photo.sol}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: photo.camera.full_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Earth Date: \", photo.earth_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, photo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(MarsRoverPhotos, \"xlZfviIeQknItjZj7c0ASH9FWG8=\");\n_c = MarsRoverPhotos;\nexport default MarsRoverPhotos;\nvar _c;\n$RefreshReg$(_c, \"MarsRoverPhotos\");","map":{"version":3,"names":["React","useState","axios","Button","TextField","Container","Typography","Card","CardMedia","CardContent","Snackbar","jsxDEV","_jsxDEV","MarsRoverPhotos","_s","sol","setSol","photos","setPhotos","error","setError","fetchMarsPhotos","response","get","data","err","sx","textAlign","padding","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","type","value","onChange","e","target","marginBottom","color","onClick","open","Boolean","autoHideDuration","message","onClose","style","marginTop","map","photo","component","height","image","img_src","alt","rover","name","camera","full_name","earth_date","id","_c","$RefreshReg$"],"sources":["/Users/aman_sharma/IdeaProjects/Nasa-Api/nasa-api-frontend/src/components/MarsRoverPhotos.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport {\n    Button,\n    TextField,\n    Container,\n    Typography,\n    Card,\n    CardMedia,\n    CardContent,\n    Snackbar,\n} from '@mui/material';\n\nconst MarsRoverPhotos = () => {\n    const [sol, setSol] = useState(1000);\n    const [photos, setPhotos] = useState([]);\n    const [error, setError] = useState('');\n\n    const fetchMarsPhotos = async () => {\n        if (sol <= 0) {\n            setError('Sol must be a positive integer.');\n            return;\n        }\n\n        try {\n            const response = await axios.get(`http://localhost:5004/mars-photos?sol=${sol}`);\n            setPhotos(response.data.photos);\n            setError('');\n        } catch (err) {\n            setError('Error fetching Mars photos.');\n        }\n    };\n\n    return (\n        <Container sx={{ textAlign: 'center', padding: '40px' }}>\n            <Typography variant=\"h3\" gutterBottom>Mars Rover Photos</Typography>\n            <TextField\n                label=\"Sol\"\n                type=\"number\"\n                value={sol}\n                onChange={(e) => setSol(e.target.value)}\n                sx={{ marginBottom: '20px' }}\n            />\n            <Button variant=\"contained\" color=\"primary\" onClick={fetchMarsPhotos}>\n                Fetch Mars Photos\n            </Button>\n\n            {error && (\n                <Snackbar\n                    open={Boolean(error)}\n                    autoHideDuration={6000}\n                    message={error}\n                    onClose={() => setError('')}\n                />\n            )}\n\n            <div style={{ marginTop: '20px' }}>\n                {photos.map((photo) => (\n                    <Card key={photo.id} sx={{ marginBottom: '20px' }}>\n                        <CardMedia\n                            component=\"img\"\n                            height=\"400\"\n                            image={photo.img_src}\n                            alt={`Mars photo taken by ${photo.rover.name} on sol ${photo.sol}`}\n                        />\n                        <CardContent>\n                            <Typography variant=\"h5\">{photo.camera.full_name}</Typography>\n                            <Typography variant=\"body2\">Earth Date: {photo.earth_date}</Typography>\n                        </CardContent>\n                    </Card>\n                ))}\n            </div>\n        </Container>\n    );\n};\n\nexport default MarsRoverPhotos;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}