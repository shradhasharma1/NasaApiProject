{"ast":null,"code":"var _jsxFileName = \"/Users/aman_sharma/IdeaProjects/Nasa-Api/nasa-api-frontend/src/components/Apod.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/Apod.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Apod = () => {\n  _s();\n  const [apodData, setApodData] = useState(null);\n  const [date, setDate] = useState('');\n  const [error, setError] = useState('');\n  const fetchApodData = async date => {\n    setError('');\n    // Get today's date\n    const today = new Date().toISOString().split('T')[0];\n\n    // Validate that the selected date is not in the future\n    if (date > today) {\n      setError('Please select a date that is today or in the past.');\n      return;\n    }\n    try {\n      const response = await axios.get(`http://localhost:5004/apod?date=${date}`);\n      setApodData(response.data);\n    } catch (err) {\n      setError('Error fetching APOD data.');\n    }\n  };\n  const handleDateChange = e => {\n    setDate(e.target.value);\n  };\n  const handleFetchClick = () => {\n    fetchApodData(date);\n  };\n  useEffect(() => {\n    // Fetch today's APOD data by default\n    const today = new Date().toISOString().split('T')[0];\n    fetchApodData(today);\n  }, []);\n\n  // Get today's date for the max attribute\n  const today = new Date().toISOString().split('T')[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Astronomy Picture of the Day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: date,\n      onChange: handleDateChange,\n      max: today // Disable future dates\n      ,\n      style: {\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchClick,\n      children: \"Fetch for Selected Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }, this), apodData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: apodData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: apodData.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: apodData.url,\n        alt: apodData.title,\n        style: {\n          maxWidth: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: apodData.explanation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), apodData.hdurl && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: apodData.hdurl,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"View HD Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Apod, \"LA7ZqPD7kEkCmJ6FnX2mK8m4Fp4=\");\n_c = Apod;\nexport default Apod;\nvar _c;\n$RefreshReg$(_c, \"Apod\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Apod","_s","apodData","setApodData","date","setDate","error","setError","fetchApodData","today","Date","toISOString","split","response","get","data","err","handleDateChange","e","target","value","handleFetchClick","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","max","marginBottom","onClick","color","title","src","url","alt","maxWidth","explanation","hdurl","href","rel","_c","$RefreshReg$"],"sources":["/Users/aman_sharma/IdeaProjects/Nasa-Api/nasa-api-frontend/src/components/Apod.js"],"sourcesContent":["// frontend/src/components/Apod.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Apod = () => {\n    const [apodData, setApodData] = useState(null);\n    const [date, setDate] = useState('');\n    const [error, setError] = useState('');\n\n    const fetchApodData = async (date) => {\n        setError('');\n        // Get today's date\n        const today = new Date().toISOString().split('T')[0];\n\n        // Validate that the selected date is not in the future\n        if (date > today) {\n            setError('Please select a date that is today or in the past.');\n            return;\n        }\n\n        try {\n            const response = await axios.get(`http://localhost:5004/apod?date=${date}`);\n            setApodData(response.data);\n        } catch (err) {\n            setError('Error fetching APOD data.');\n        }\n    };\n\n    const handleDateChange = (e) => {\n        setDate(e.target.value);\n    };\n\n    const handleFetchClick = () => {\n        fetchApodData(date);\n    };\n\n    useEffect(() => {\n        // Fetch today's APOD data by default\n        const today = new Date().toISOString().split('T')[0];\n        fetchApodData(today);\n    }, []);\n\n    // Get today's date for the max attribute\n    const today = new Date().toISOString().split('T')[0];\n\n    return (\n        <div style={{ textAlign: 'center', padding: '20px' }}>\n            <h1>Astronomy Picture of the Day</h1>\n            <input\n                type=\"date\"\n                value={date}\n                onChange={handleDateChange}\n                max={today} // Disable future dates\n                style={{ marginBottom: '20px' }}\n            />\n            <button onClick={handleFetchClick}>Fetch for Selected Date</button>\n\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n\n            {apodData && (\n                <div>\n                    <h2>{apodData.title}</h2>\n                    <h4>{apodData.date}</h4>\n                    <img src={apodData.url} alt={apodData.title} style={{ maxWidth: '100%' }} />\n                    <p>{apodData.explanation}</p>\n                    {apodData.hdurl && <a href={apodData.hdurl} target=\"_blank\" rel=\"noopener noreferrer\">View HD Image</a>}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Apod;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}